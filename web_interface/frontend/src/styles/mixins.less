@import './variables.less';

// Flexbox mixins
.flex(@direction: row, @wrap: nowrap, @justify: flex-start, @align: stretch) {
  display: flex;
  flex-direction: @direction;
  flex-wrap: @wrap;
  justify-content: @justify;
  align-items: @align;
}

.flex-center() {
  .flex(row, nowrap, center, center);
}

.flex-between() {
  .flex(row, nowrap, space-between, center);
}

.flex-around() {
  .flex(row, nowrap, space-around, center);
}

// Text mixins
.text-ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-ellipsis-lines(@lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: @lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

.text-center() {
  text-align: center;
}

.text-left() {
  text-align: left;
}

.text-right() {
  text-align: right;
}

// Position mixins
.absolute(@top: auto, @right: auto, @bottom: auto, @left: auto) {
  position: absolute;
  top: @top;
  right: @right;
  bottom: @bottom;
  left: @left;
}

.fixed(@top: auto, @right: auto, @bottom: auto, @left: auto) {
  position: fixed;
  top: @top;
  right: @right;
  bottom: @bottom;
  left: @left;
}

.relative() {
  position: relative;
}

.center-absolute() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Size mixins
.square(@size) {
  width: @size;
  height: @size;
}

.size(@width, @height: @width) {
  width: @width;
  height: @height;
}

.full-size() {
  width: 100%;
  height: 100%;
}

.full-viewport() {
  width: 100vw;
  height: 100vh;
}

// Spacing mixins
.margin-x(@value) {
  margin-left: @value;
  margin-right: @value;
}

.margin-y(@value) {
  margin-top: @value;
  margin-bottom: @value;
}

.padding-x(@value) {
  padding-left: @value;
  padding-right: @value;
}

.padding-y(@value) {
  padding-top: @value;
  padding-bottom: @value;
}

// Border mixins
.border(@width: @border-width-base, @style: @border-style-base, @color: @border-color-base) {
  border: @width @style @color;
}

.border-top(@width: @border-width-base, @style: @border-style-base, @color: @border-color-base) {
  border-top: @width @style @color;
}

.border-right(@width: @border-width-base, @style: @border-style-base, @color: @border-color-base) {
  border-right: @width @style @color;
}

.border-bottom(@width: @border-width-base, @style: @border-style-base, @color: @border-color-base) {
  border-bottom: @width @style @color;
}

.border-left(@width: @border-width-base, @style: @border-style-base, @color: @border-color-base) {
  border-left: @width @style @color;
}

.border-radius(@radius: @border-radius-base) {
  border-radius: @radius;
}

.border-radius-top(@radius: @border-radius-base) {
  border-top-left-radius: @radius;
  border-top-right-radius: @radius;
}

.border-radius-bottom(@radius: @border-radius-base) {
  border-bottom-left-radius: @radius;
  border-bottom-right-radius: @radius;
}

.border-radius-left(@radius: @border-radius-base) {
  border-top-left-radius: @radius;
  border-bottom-left-radius: @radius;
}

.border-radius-right(@radius: @border-radius-base) {
  border-top-right-radius: @radius;
  border-bottom-right-radius: @radius;
}

// Shadow mixins
.box-shadow(@shadow: @box-shadow-base) {
  box-shadow: @shadow;
}

.text-shadow(@shadow: 0 1px 2px rgba(0, 0, 0, 0.1)) {
  text-shadow: @shadow;
}

// Transition mixins
.transition(@property: all, @duration: @animation-duration-base, @timing: @ease-out, @delay: 0s) {
  transition: @property @duration @timing @delay;
}

.transition-transform(@duration: @animation-duration-base, @timing: @ease-out) {
  transition: transform @duration @timing;
}

.transition-opacity(@duration: @animation-duration-base, @timing: @ease-out) {
  transition: opacity @duration @timing;
}

// Transform mixins
.translate(@x: 0, @y: 0) {
  transform: translate(@x, @y);
}

.translate3d(@x: 0, @y: 0, @z: 0) {
  transform: translate3d(@x, @y, @z);
}

.scale(@scale: 1) {
  transform: scale(@scale);
}

.rotate(@angle: 0deg) {
  transform: rotate(@angle);
}

// Button mixins
.button-base() {
  display: inline-block;
  margin-bottom: 0;
  font-weight: @font-weight-strong;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  border: @border-width-base @border-style-base transparent;
  white-space: nowrap;
  line-height: @line-height-base;
  user-select: none;
  .transition();
  
  &:focus,
  &:active {
    outline: 0;
  }
  
  &:hover,
  &:focus {
    color: @primary-color-hover;
    text-decoration: none;
  }
  
  &:active {
    background-image: none;
    outline: 0;
    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  }
  
  &[disabled] {
    cursor: not-allowed;
    pointer-events: none;
    opacity: 0.6;
  }
}

.button-variant(@color, @background, @border) {
  color: @color;
  background-color: @background;
  border-color: @border;
  
  &:hover,
  &:focus,
  &:active {
    color: @color;
    background-color: darken(@background, 10%);
    border-color: darken(@border, 12%);
  }
}

.button-size(@padding-vertical, @padding-horizontal, @font-size, @line-height, @border-radius) {
  padding: @padding-vertical @padding-horizontal;
  font-size: @font-size;
  line-height: @line-height;
  border-radius: @border-radius;
}

// Form mixins
.form-control() {
  display: block;
  width: 100%;
  padding: @padding-sm;
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @text-color;
  background-color: @component-background;
  background-image: none;
  border: @border-width-base @border-style-base @border-color-base;
  border-radius: @border-radius-base;
  .transition(border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s);
  
  &:focus {
    border-color: @primary-color;
    outline: 0;
    box-shadow: 0 0 0 2px @primary-color-outline;
  }
  
  &[disabled],
  &[readonly] {
    background-color: @gray-3;
    opacity: 1;
    cursor: not-allowed;
  }
}

// Card mixins
.card() {
  background: @component-background;
  border-radius: @border-radius-base;
  border: @border-width-base @border-style-base @border-color-base;
  .box-shadow();
  .transition();
  
  &:hover {
    .box-shadow(0 4px 12px rgba(0, 0, 0, 0.15));
  }
}

// Loading mixins
.loading-spin() {
  animation: loadingSpin 1s infinite linear;
}

@keyframes loadingSpin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Media query mixins
.media-xs(@rules) {
  @media (max-width: @screen-xs) {
    @rules();
  }
}

.media-sm(@rules) {
  @media (min-width: @screen-sm) {
    @rules();
  }
}

.media-md(@rules) {
  @media (min-width: @screen-md) {
    @rules();
  }
}

.media-lg(@rules) {
  @media (min-width: @screen-lg) {
    @rules();
  }
}

.media-xl(@rules) {
  @media (min-width: @screen-xl) {
    @rules();
  }
}

.media-xxl(@rules) {
  @media (min-width: @screen-xxl) {
    @rules();
  }
}

// Responsive mixins
.responsive-padding(@xs: @padding-sm, @sm: @padding-md, @md: @padding-lg, @lg: @padding-xl) {
  padding: @xs;
  
  .media-sm({
    padding: @sm;
  });
  
  .media-md({
    padding: @md;
  });
  
  .media-lg({
    padding: @lg;
  });
}

// Clear float
.clearfix() {
  &::before,
  &::after {
    content: '';
    display: table;
  }
  
  &::after {
    clear: both;
  }
}

// Hide element
.sr-only() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Scroll behavior
.scroll-smooth() {
  scroll-behavior: smooth;
}

.scroll-hidden() {
  overflow: hidden;
}

.scroll-auto() {
  overflow: auto;
}

.scroll-x-hidden() {
  overflow-x: hidden;
}

.scroll-y-hidden() {
  overflow-y: hidden;
}

.scroll-x-auto() {
  overflow-x: auto;
}

.scroll-y-auto() {
  overflow-y: auto;
}

// Custom scrollbar
.custom-scrollbar(@width: 8px, @track-color: @gray-3, @thumb-color: @gray-6, @thumb-hover-color: @gray-7) {
  &::-webkit-scrollbar {
    width: @width;
    height: @width;
  }
  
  &::-webkit-scrollbar-track {
    background: @track-color;
    border-radius: @width / 2;
  }
  
  &::-webkit-scrollbar-thumb {
    background: @thumb-color;
    border-radius: @width / 2;
    .transition();
    
    &:hover {
      background: @thumb-hover-color;
    }
  }
  
  &::-webkit-scrollbar-corner {
    background: @track-color;
  }
}
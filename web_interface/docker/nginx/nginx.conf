# ==================== TradeMaster 主Nginx配置文件 ====================
# 高性能、安全的负载均衡和反向代理配置
# 适用于开发和生产环境

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# 工作进程连接数和事件配置
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

# HTTP服务配置
http {
    # ==================== 基础配置 ====================
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 日志格式定义
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # JSON格式日志（便于日志分析和监控）
    log_format json_combined escape=json
        '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"http_host":"$http_host",'
        '"server_name":"$server_name",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_connect_time":"$upstream_connect_time",'
        '"upstream_header_time":"$upstream_header_time",'
        '"upstream_response_time":"$upstream_response_time",'
        '"ssl_protocol":"$ssl_protocol",'
        '"ssl_cipher":"$ssl_cipher"'
        '}';

    # 访问日志配置
    access_log /var/log/nginx/access.log main;

    # ==================== 性能优化配置 ====================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;

    # 隐藏Nginx版本信息（安全配置）
    server_tokens off;

    # 文件句柄缓存
    open_file_cache max=2000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # ==================== 缓冲区配置 ====================
    client_body_buffer_size 32K;
    client_header_buffer_size 2k;
    large_client_header_buffers 4 8k;
    client_max_body_size 100M;

    # ==================== 超时配置 ====================
    client_body_timeout 30;
    client_header_timeout 30;
    send_timeout 30;

    # ==================== Gzip压缩配置 ====================
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/truetype
        font/opentype
        font/eot
        font/otf
        application/vnd.ms-fontobject
        application/font-woff
        application/font-woff2;

    # ==================== SSL/TLS安全配置 ====================
    # SSL会话配置
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # SSL协议和加密套件
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # OCSP配置
    ssl_stapling on;
    ssl_stapling_verify on;

    # ==================== 安全头配置 ====================
    # 基础安全响应头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

    # 内容安全策略（CSP）
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' ws: wss: https:; frame-ancestors 'self'; base-uri 'self'; form-action 'self';" always;

    # ==================== Rate Limiting 配置 ====================
    # API请求限制
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=api_strict:10m rate=5r/s;
    
    # 静态资源请求限制
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;
    
    # WebSocket连接限制
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=10r/s;
    
    # 登录请求限制
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # 连接数限制
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # ==================== 上游服务器配置 ====================
    # 后端API服务器集群
    upstream backend_api {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s weight=1;
        # 生产环境可以添加更多后端实例
        # server backend2:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # 前端服务器集群
    upstream frontend_web {
        least_conn;
        server frontend:3000 max_fails=3 fail_timeout=30s weight=1;
        # 生产环境可以添加更多前端实例
        # server frontend2:3000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 16;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # ==================== 缓存配置 ====================
    # 静态文件缓存
    proxy_cache_path /var/cache/nginx/static 
                     levels=1:2 
                     keys_zone=static_cache:50m 
                     max_size=500m 
                     inactive=60m 
                     use_temp_path=off;

    # API响应缓存（谨慎使用，仅用于不敏感的只读数据）
    proxy_cache_path /var/cache/nginx/api 
                     levels=1:2 
                     keys_zone=api_cache:10m 
                     max_size=100m 
                     inactive=10m 
                     use_temp_path=off;

    # ==================== 代理基础配置 ====================
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    # 代理缓冲区配置
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 16 8k;
    proxy_busy_buffers_size 16k;

    # 代理超时配置
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;

    # 代理重试配置
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 3;
    proxy_next_upstream_timeout 30s;

    # ==================== WebSocket支持 ====================
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # ==================== 包含其他配置文件 ====================
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    # ==================== 默认服务器配置 ====================
    # 捕获所有未匹配的请求
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # 限制连接数
        limit_conn addr 20;

        # 返回403禁止访问
        location / {
            return 403;
        }

        # 健康检查端点
        location = /nginx-health {
            access_log off;
            return 200 "nginx-healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
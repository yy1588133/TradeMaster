# ==================== TradeMaster Web Interface 生产环境配置模板 ====================
# 生产环境环境变量配置模板
# 使用方法: 复制此文件为.env.prod，并填入实际的生产环境配置值
# 注意: 生产环境必须使用强密码和随机密钥，不要使用默认值

# ==================== 基础配置 ====================
# 项目信息
PROJECT_NAME=TradeMaster Web Interface
VERSION=1.0.0
DEBUG=false
LOG_LEVEL=INFO

# 环境标识
NODE_ENV=production
ENVIRONMENT=production

# ==================== 服务器配置 ====================
# 后端服务器配置
SERVER_HOST=0.0.0.0
SERVER_PORT=8000

# 网关配置
GATEWAY_HTTP_PORT=80
GATEWAY_HTTPS_PORT=443
TRADEMASTER_API_PORT=8080

# ==================== 数据库配置 ====================
# PostgreSQL配置 - 必须修改密码
POSTGRES_SERVER=postgres
POSTGRES_USER=trademaster
POSTGRES_PASSWORD=CHANGE_THIS_STRONG_PASSWORD_123!@#
POSTGRES_DB=trademaster_web
POSTGRES_PORT=5432

# 数据库连接池配置
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=50
DB_POOL_TIMEOUT=60

# ==================== Redis配置 ====================
# Redis服务配置 - 必须设置密码
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=CHANGE_THIS_REDIS_PASSWORD_456!@#
REDIS_SSL=false

# 缓存配置
CACHE_EXPIRE_SECONDS=3600
CACHE_KEY_PREFIX=trademaster:prod:

# ==================== 安全配置 ====================
# JWT配置 - 必须使用强随机密钥
SECRET_KEY=CHANGE_THIS_TO_A_VERY_STRONG_RANDOM_SECRET_KEY_AT_LEAST_64_CHARACTERS_LONG
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7
ALGORITHM=HS256

# 密码策略
MIN_PASSWORD_LENGTH=12
REQUIRE_SPECIAL_CHARS=true

# ==================== CORS配置 ====================
# 允许的跨域源 - 根据实际域名配置
BACKEND_CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com,https://api.your-domain.com
ALLOWED_HOSTS=your-domain.com,www.your-domain.com,api.your-domain.com

# ==================== TradeMaster集成配置 ====================
# TradeMaster核心服务
TRADEMASTER_API_URL=http://trademaster-core:8080
TRADEMASTER_API_TIMEOUT=600
TRADEMASTER_API_RETRY_ATTEMPTS=3
TRADEMASTER_API_RETRY_DELAY=10

# TradeMaster数据路径
TRADEMASTER_DATA_PATH=/app/trademaster_data
TRADEMASTER_WORKSPACE=/app/trademaster_workspace

# ==================== 前端应用配置 ====================
# React应用配置 - 根据实际域名配置
REACT_APP_API_BASE_URL=https://your-domain.com/api/v1
REACT_APP_WS_URL=wss://your-domain.com/ws
REACT_APP_ENVIRONMENT=production
REACT_APP_DEBUG=false

# 前端构建配置
GENERATE_SOURCEMAP=false
INLINE_RUNTIME_CHUNK=false

# ==================== 文件存储配置 ====================
# 上传配置
UPLOAD_DIR=uploads
MAX_UPLOAD_SIZE=104857600
ALLOWED_EXTENSIONS=.csv,.json,.xlsx,.xls,.parquet

# 存储目录
DATA_DIR=data
MODEL_DIR=models
LOG_DIR=logs

# ==================== 生产特殊配置 ====================
# 生产环境严格配置
AUTO_RELOAD=false
SHOW_ERROR_DETAILS=false
ENABLE_DOCS=false

# ==================== 监控和日志配置 ====================
# 日志配置
LOG_FORMAT=json
LOG_FILE_MAX_SIZE=52428800
LOG_FILE_BACKUP_COUNT=20

# 监控配置
ENABLE_METRICS=true
METRICS_PORT=9090

# Sentry错误监控 - 建议配置
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# ==================== 邮件配置 ====================
# SMTP配置 - 根据实际邮件服务配置
SMTP_TLS=true
SMTP_SSL=false
SMTP_PORT=587
SMTP_HOST=smtp.your-email-provider.com
SMTP_USER=your-email@your-domain.com
SMTP_PASSWORD=YOUR_EMAIL_PASSWORD
EMAILS_FROM_EMAIL=noreply@your-domain.com
EMAILS_FROM_NAME=TradeMaster Team

# ==================== API限流配置 ====================
# 生产环境严格限流
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_BURST=20

# ==================== WebSocket配置 ====================
WEBSOCKET_ENABLED=true
WEBSOCKET_MAX_CONNECTIONS=1000
WEBSOCKET_HEARTBEAT_INTERVAL=60

# ==================== 数据处理配置 ====================
DATA_PROCESSING_CHUNK_SIZE=10000
DATA_PROCESSING_MAX_WORKERS=8

# ==================== 模型训练配置 ====================
TRAINING_MAX_CONCURRENT_JOBS=4
TRAINING_CHECKPOINT_INTERVAL=200
TRAINING_EARLY_STOPPING_PATIENCE=20

# ==================== Docker配置 ====================
# Docker Compose相关配置
COMPOSE_PROJECT_NAME=trademaster-prod
COMPOSE_FILE=docker-compose.prod.yml

# 构建配置
BUILD_ENV=production
BUILD_DATE=2024-01-01T00:00:00Z

# 资源限制
POSTGRES_MEMORY_LIMIT=4g
REDIS_MEMORY_LIMIT=1g
BACKEND_MEMORY_LIMIT=4g
FRONTEND_MEMORY_LIMIT=1g
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=2048

# ==================== SSL/TLS配置 ====================
# SSL证书配置
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem
SSL_DHPARAM_PATH=/etc/nginx/ssl/dhparam.pem

# ==================== 备份配置 ====================
# 数据库备份配置
BACKUP_RETENTION_DAYS=30
BACKUP_SCHEDULE=0 2 * * *
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_S3_REGION=us-east-1
AWS_ACCESS_KEY_ID=YOUR_AWS_ACCESS_KEY
AWS_SECRET_ACCESS_KEY=YOUR_AWS_SECRET_KEY

# ==================== 监控服务配置 ====================
# Grafana配置
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=CHANGE_THIS_GRAFANA_PASSWORD_789!@#
GRAFANA_PORT=3001

# Prometheus配置
PROMETHEUS_PORT=9090

# ==================== 数据存储配置 ====================
# 数据存储根目录 - 生产环境路径
DATA_ROOT=/opt/trademaster
TRADEMASTER_DATA_ROOT=/opt/trademaster/shared

# ==================== 网络配置 ====================
# Docker网络配置
DOCKER_NETWORK_SUBNET=172.30.0.0/16
DOCKER_NETWORK_GATEWAY=172.30.0.1

# ==================== 时区配置 ====================
TZ=Asia/Shanghai

# ==================== 扩展集成配置 ====================
# Web界面集成配置
WEB_POSTGRES_USER=trademaster
WEB_POSTGRES_PASSWORD=CHANGE_THIS_WEB_DB_PASSWORD_ABC!@#
WEB_POSTGRES_DB=trademaster_web
WEB_SECRET_KEY=CHANGE_THIS_WEB_SECRET_KEY_DEF456!@#
WEB_CORS_ORIGINS=https://your-domain.com

# ==================== 性能优化配置 ====================
# 数据库性能配置
POSTGRES_SHARED_BUFFERS=1GB
POSTGRES_EFFECTIVE_CACHE_SIZE=3GB
POSTGRES_WORK_MEM=64MB
POSTGRES_MAINTENANCE_WORK_MEM=256MB

# Redis性能配置
REDIS_MAXMEMORY=1gb
REDIS_MAXMEMORY_POLICY=allkeys-lru

# ==================== 安全增强配置 ====================
# 应用安全配置
SECURE_COOKIES=true
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=Strict

# 密码哈希配置
BCRYPT_ROUNDS=12
PBKDF2_ITERATIONS=100000

# ==================== 容器安全配置 ====================
# 容器运行用户
CONTAINER_USER_ID=1000
CONTAINER_GROUP_ID=1000

# 安全选项
SECURITY_OPTS=no-new-privileges:true,apparmor:docker-default

# ==================== 生产环境重要提醒 ====================
# 
# 🔒 安全检查清单:
# 1. 所有密码必须修改为强密码（至少16位，包含大小写字母、数字、特殊字符）
# 2. SECRET_KEY必须是至少64位的随机字符串
# 3. 数据库密码、Redis密码必须设置
# 4. CORS域名必须设置为实际的生产域名
# 5. SSL证书必须配置
# 6. Sentry DSN建议配置用于错误监控
# 7. 邮件服务必须配置
# 8. 备份策略必须配置
# 
# 🔧 性能优化建议:
# 1. 根据服务器规格调整资源限制
# 2. 根据负载情况调整连接池大小
# 3. 配置CDN加速静态资源
# 4. 启用Gzip压缩
# 5. 配置缓存策略
# 
# 📊 监控配置建议:
# 1. 配置Grafana仪表板
# 2. 设置告警规则
# 3. 配置日志聚合
# 4. 监控关键业务指标
#
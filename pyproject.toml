# ==================== TradeMaster Web Interface Python Project Configuration ====================
# Python项目统一配置文件
# 遵循PEP 518, PEP 621标准

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

# ==================== 项目元数据 ====================
[project]
name = "trademaster-web-interface"
version = "1.0.0"
description = "Modern web interface for TradeMaster quantitative trading platform"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
authors = [
    {name = "TradeMaster Team", email = "contact@trademaster.ai"},
]
maintainers = [
    {name = "TradeMaster Team", email = "contact@trademaster.ai"},
]
keywords = [
    "quantitative-trading",
    "machine-learning", 
    "finance",
    "trading-platform",
    "web-interface",
    "fastapi",
    "react"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

# ==================== 核心依赖 ====================
dependencies = [
    # Web框架
    "fastapi>=0.104.0,<0.110.0",
    "uvicorn[standard]>=0.24.0,<0.30.0",
    "python-multipart>=0.0.6,<0.1.0",
    
    # 数据库
    "sqlalchemy>=2.0.0,<2.1.0",
    "asyncpg>=0.29.0,<0.30.0",
    "alembic>=1.12.0,<1.14.0",
    "psycopg2-binary>=2.9.0,<2.10.0",
    
    # 缓存和队列
    "redis>=5.0.0,<6.0.0",
    "celery>=5.3.0,<5.4.0",
    
    # 安全和认证
    "python-jose[cryptography]>=3.3.0,<4.0.0",
    "passlib[bcrypt]>=1.7.4,<1.8.0",
    "cryptography>=41.0.0,<42.0.0",
    
    # 数据验证
    "pydantic>=2.5.0,<3.0.0",
    "pydantic-settings>=2.1.0,<3.0.0",
    "email-validator>=2.1.0,<3.0.0",
    
    # HTTP客户端
    "httpx>=0.25.0,<0.28.0",
    "aiofiles>=23.2.0,<24.0.0",
    
    # 配置管理
    "python-decouple>=3.8,<4.0",
    
    # 日志系统
    "loguru>=0.7.2,<0.8.0",
    "structlog>=23.2.0,<24.0.0",
    
    # 数据处理
    "pandas>=2.1.0,<3.0.0",
    "numpy>=1.24.0,<2.0.0",
    "openpyxl>=3.1.0,<4.0.0",
    
    # 工具库
    "click>=8.1.0,<9.0.0",
    "typer>=0.9.0,<1.0.0",
    "rich>=13.7.0,<14.0.0",
    "python-dateutil>=2.8.0,<3.0.0",
    
    # 监控
    "prometheus-client>=0.19.0,<1.0.0",
    "sentry-sdk[fastapi]>=1.38.0,<2.0.0",
]

# ==================== 可选依赖组 ====================
[project.optional-dependencies]
# 开发依赖
dev = [
    # 测试框架
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "pytest-xdist>=3.3.0,<4.0.0",
    "pytest-benchmark>=4.0.0,<5.0.0",
    
    # 代码质量
    "black>=23.11.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.1.0,<7.0.0",
    "mypy>=1.7.0,<2.0.0",
    "pre-commit>=3.6.0,<4.0.0",
    
    # 安全检查
    "bandit>=1.7.5,<2.0.0",
    "safety>=2.3.0,<3.0.0",
    
    # 测试数据
    "factory-boy>=3.3.0,<4.0.0",
    "faker>=20.1.0,<21.0.0",
    
    # 调试工具
    "debugpy>=1.8.0,<2.0.0",
    "ipython>=8.17.0,<9.0.0",
    "ipdb>=0.13.0,<1.0.0",
]

# 生产依赖
prod = [
    "gunicorn>=21.2.0,<22.0.0",
    "flower>=2.0.0,<3.0.0",
]

# 文档依赖
docs = [
    "mkdocs>=1.5.0,<2.0.0",
    "mkdocs-material>=9.4.0,<10.0.0",
    "mkdocstrings[python]>=0.24.0,<1.0.0",
]

# 完整开发环境
all = [
    "trademaster-web-interface[dev,prod,docs]",
]

# ==================== 项目URLs ====================
[project.urls]
Homepage = "https://github.com/TradeMaster-NTU/TradeMaster"
Documentation = "https://trademaster.ai/docs"
Repository = "https://github.com/TradeMaster-NTU/TradeMaster"
Issues = "https://github.com/TradeMaster-NTU/TradeMaster/issues"
Changelog = "https://github.com/TradeMaster-NTU/TradeMaster/blob/main/CHANGELOG.md"

# ==================== 构建配置 ====================
[tool.setuptools]
packages = ["web_interface.backend.app"]
package-dir = {"" = "."}

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.toml", "*.cfg", "*.ini"]

# ==================== 项目脚本 ====================
[project.scripts]
trademaster-web = "web_interface.backend.app.main:main"
trademaster-db = "web_interface.backend.scripts.db_cli:main"
trademaster-init = "web_interface.backend.scripts.init_database:main"

# ==================== Black 代码格式化配置 ====================
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    # directories
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
  | alembic/versions
)/
'''

# ==================== isort 导入排序配置 ====================
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
indent = 4
lines_between_types = 1
known_first_party = ["app", "web_interface"]
known_third_party = [
    "fastapi", "uvicorn", "sqlalchemy", "alembic", "redis", "celery",
    "pydantic", "httpx", "loguru", "pandas", "numpy", "pytest"
]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"

# ==================== MyPy 类型检查配置 ====================
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

# ==================== Pytest 测试配置 ====================
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=web_interface.backend.app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--tb=short",
]
testpaths = ["web_interface/backend/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "database: marks tests that require database",
    "redis: marks tests that require redis",
    "external: marks tests that require external services",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# ==================== Coverage 覆盖率配置 ====================
[tool.coverage.run]
source = ["web_interface/backend/app"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/migrations/*",
    "*/alembic/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# ==================== Bandit 安全扫描配置 ====================
[tool.bandit]
exclude_dirs = [
    "tests",
    "migrations", 
    "alembic",
    "venv",
    "env"
]
skips = [
    "B101",  # Test for use of assert
    "B601",  # Shell injection
]

# ==================== Ruff 代码检查配置 ====================
[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg", 
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
    "alembic/versions",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.mccabe]
max-complexity = 10

# ==================== 环境配置 ====================
[tool.setuptools_scm]
version_scheme = "release-branch-semver"

# ==================== 文档生成配置 ====================
[tool.pydocstyle]
convention = "google"
add-ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107"]

# ==================== 依赖检查配置 ====================
[tool.pip-audit]
require-hashes = false
desc = true

# ==================== 项目特定配置 ====================
[tool.trademaster]
# TradeMaster特定配置
version = "1.0.0"
backend_path = "web_interface/backend"
frontend_path = "web_interface/frontend"
data_path = "data"
config_path = "configs"

[tool.trademaster.database]
default_url = "postgresql://trademaster:password@localhost:5432/trademaster_web"
migration_path = "web_interface/backend/alembic"

[tool.trademaster.redis]
default_url = "redis://localhost:6379/0"

[tool.trademaster.development]
auto_reload = true
debug = true
log_level = "DEBUG"

[tool.trademaster.production]
auto_reload = false
debug = false
log_level = "INFO"